{"version":3,"file":"app.component.js","sourceRoot":"","sources":["../Users/vijayt/Vijay/gameoflife-ui/tmp/broccoli_type_script_compiler-input_base_path-1nlcaNKc.tmp/0/src/app/app.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAkC,eAAe,CAAC,CAAA;AAClD,mCAAkC,sBAAsB,CAAC,CAAA;AACzD,0BAA0B,aAAa,CAAC,CAAA;AACxC,qBAA+B,eAAe,CAAC,CAAA;AAW/C;IAII,sBAAoB,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;QAHxD,UAAK,GAAG,YAAY,CAAC;IAKrB,CAAC;IAED,+BAAQ,GAAR;QACI,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,gCAAS,GAAT;QAAA,iBAMC;QALC,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE;aAChC,SAAS,CAAC,UAAA,MAAM;YACb,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACzB,CAAC,CAAC;YACF,UAAA,KAAK,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAAC;IAClC,CAAC;IAED,6BAAM,GAAN;QACE,IAAI,CAAC,KAAK,GAAG,IAAI,qBAAS,EAAE,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,MAAM,CAAC;IACzB,CAAC;IAED,qCAAc,GAAd;QAAA,iBAOC;QANC,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC;aAC7D,SAAS,CAAC,UAAA,KAAK;YACd,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,KAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC,CAAC;YACF,UAAA,KAAK,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAAC;IACpD,CAAC;IAED,gCAAS,GAAT,UAAU,EAAS;QAAnB,iBAMC;QALC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,EAAE,CAAC;aACb,SAAS,CAAC,UAAA,KAAK;YACd,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC,CAAC;YACF,UAAA,KAAK,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAAC;IACpD,CAAC;IAED,kCAAW,GAAX,UAAY,EAAU;QAAtB,iBAMC;QALC,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,EAAE,CAAC;aACf,SAAS,CAAC,UAAA,KAAK;YACd,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC,CAAC;YACF,UAAA,KAAK,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAAC;IACpD,CAAC;IAED,kCAAW,GAAX,UAAY,EAAS;QAArB,iBAQC;QAPC,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,EAAE,CAAC;aACf,SAAS,CAAC,UAAA,KAAK;YACd,KAAK,CAAC,YAAY,CAAC,CAAC;YACpB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,KAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC,CAAC;YACF,UAAA,KAAK,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAAC;IACpD,CAAC;IAjEL;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,UAAU;YACpB,WAAW,EAAE,oBAAoB;YACjC,SAAS,EAAE,CAAC,mBAAmB,CAAC;YAChC,SAAS,EAAE,CAAC,qBAAc,EAAE,sCAAiB,CAAC;SACjD,CAAC;;oBAAA;IA4DF,mBAAC;AAAD,CAAC,AA3DD,IA2DC;AA3DY,oBAAY,eA2DxB,CAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { GameoflifeService } from './gameoflife.service';\nimport { GameBoard } from './GameBoard';\nimport { HTTP_PROVIDERS } from '@angular/http';\nimport { GameboardComponent } from './gameboard/gameboard.component'\n\n\n@Component({\n    moduleId: module.id,\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.css'],\n    providers: [HTTP_PROVIDERS, GameoflifeService]\n})\nexport class AppComponent implements OnInit {\n    title = 'app works!';\n    boards: GameBoard[];\n    board: GameBoard;\n    constructor(private gameOfLifeService: GameoflifeService) {\n\n    }\n\n    ngOnInit() {\n        this.getBoards();\n    }\n\n    getBoards(){\n      this.gameOfLifeService.getScenarios()\n          .subscribe(boards => {\n              this.boards = boards;\n          }),\n          error => console.log(error);\n    }\n\n    addNew(){\n      this.board = new GameBoard();\n      this.board.id = \":new\";\n    }\n\n    configNewBoard(){\n      this.gameOfLifeService.configNewBoard(this.board.size, this.board.initialAliveCells)\n                            .subscribe(board => {\n                              this.board = board;\n                              this.getBoards();\n                            }),\n                            error => console.log(error);\n    }\n\n    loadBoard(id:String){\n      this.gameOfLifeService.loadBoard(id)\n                            .subscribe(board => {\n                              this.board = board;\n                            }),\n                            error => console.log(error);\n    }\n\n    calcNextGen(id: String){\n      this.gameOfLifeService.calcNextGen(id)\n                            .subscribe(board => {\n                              this.board = board;\n                            }),\n                            error => console.log(error);\n    }\n\n    deleteBoard(id:String){\n      this.gameOfLifeService.deleteBoard(id)\n                            .subscribe(board => {\n                              alert(\"deleted...\");\n                              this.board = null;\n                              this.getBoards();\n                            }),\n                            error => console.log(error);\n    }\n}\n"]}