{"version":3,"file":"gameoflife.component.js","sourceRoot":"","sources":["gameoflife.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA0B,eAAe,CAAC,CAAA;AAC1C,mCAAkC,sBAAsB,CAAC,CAAA;AACzD,qBAA+B,eAAe,CAAC,CAAA;AAS/C;IAME,gCAAoB,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;IAExD,CAAC;IAED,yCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAG,2BAA2B,CAAC;IAC7C,CAAC;IAED,uCAAM,GAAN;QAAA,iBAOC;QANC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAC,IAAI,CAAC,YAAY,CAAC;aACjC,SAAS,CACR,UAAA,GAAG;YACD,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC;QACnB,CAAC,EACD,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,YAAY,GAAQ,KAAK,EAA9B,CAA8B,CAAC,CAAC;IACrE,CAAC;IAED,4CAAW,GAAX;QAAA,iBAOC;QANC,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE;aACX,SAAS,CACR,UAAA,GAAG;YACD,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC;QACnB,CAAC,EACD,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,YAAY,GAAQ,KAAK,EAA9B,CAA8B,CAAC,CAAC;IACrE,CAAC;IAED,4CAAW,GAAX,UAAY,IAAY;QACtB,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,EAAE,CAAA,CAAC,IAAI,CAAC,CAAA,CAAC;YACP,GAAG,GAAG,OAAO,CAAC;QAChB,CAAC;QAAA,IAAI,CAAA,CAAC;YACJ,GAAG,GAAG,MAAM,CAAC;QACf,CAAC;QACD,MAAM,CAAC,GAAG,CAAC;IACb,CAAC;IA/CH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,gBAAgB;YAC1B,WAAW,EAAE,2BAA2B;YACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;YACvC,SAAS,EAAE,CAAC,qBAAc,EAAE,sCAAiB,CAAC;SAC/C,CAAC;;8BAAA;IA0CF,6BAAC;AAAD,CAAC,AAzCD,IAyCC;AAzCY,8BAAsB,yBAyClC,CAAA","sourcesContent":["import { Component } from '@angular/core';\nimport { GameOfLifeService } from './gameoflife.service';\nimport { HTTP_PROVIDERS } from '@angular/http';\n\n@Component({\n  moduleId: module.id,\n  selector: 'gameoflife-app',\n  templateUrl: 'gameoflife.component.html',\n  styleUrls: ['gameoflife.component.css'],\n  providers: [HTTP_PROVIDERS, GameOfLifeService]\n})\nexport class GameoflifeAppComponent {\n  private appName: String;\r\n  private board: Array<Array<String>>;\r\n  private errorMessage: any;\r\n  private size: Number;\r\n  private aliveIndexes: String;\r\n  constructor(private gameOfLifeService: GameOfLifeService){\r\n\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.appName = \"Game of Life - Simulation\";\r\n  }\n\n  config(){\n    this.gameOfLifeService.config(this.size,this.aliveIndexes)\n                            .subscribe(\n                              res => {\n                                this.board = res;\n                              },\n                              error => this.errorMessage = <any>error);\n  }\n\n  calcNextGen(){\n    this.gameOfLifeService.calcNextGen()\n                            .subscribe(\n                              res => {\n                                this.board = res;\n                              },\n                              error => this.errorMessage = <any>error);\n  }\n\n  selectClass(cell: String){\n    let css = \"\";\n    if(cell){\n      css = \"alive\";\n    }else{\n      css = \"dead\";\n    }\n    return css;\n  }\n}\n"]}